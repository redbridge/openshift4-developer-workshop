#---
# Builds an image via kaniko and pushes it to registry.
#apiVersion: tekton.dev/v1alpha1
#kind: Task
#metadata:
#  name: build-push-kaniko
#spec:
#  inputs:
#    resources:
#    - name: source
#      type: git
#    params:
#    - name: pathToDockerFile
#      description: The path to the dockerfile to build
#      default: /workspace/workspace/Dockerfile
#    - name: pathToContext
#      description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
#      default: /workspace/workspace
#  outputs:
#    resources:
#    - name: app-image
#      type: image
#  steps:
#  - name: build-and-push
#    image: gcr.io/kaniko-project/executor:v0.13.0
#    # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
#    env:
#    - name: "DOCKER_CONFIG"
#      value: "/tekton/home/.docker/"
#    command:
#    - /kaniko/executor
#    args:
#    - --dockerfile=$(inputs.params.pathToDockerFile)
#    - --destination=$(outputs.resources.app-image.url)
#    - --context=$(inputs.params.pathToContext)
#    - --oci-layout-path=$(inputs.resources.app-image.path)
#    securityContext:
#      runAsUser: 0
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: apply-manifests
spec:
  inputs:
    resources:
      - {type: git, name: source}
    params:
      - name: manifest_dir
        description: The directory in source that contains yaml manifests
        type: string
        default: "k8s"

  steps:
    - name: apply
      image: quay.io/openshift/origin-cli:latest
      workingDir: /workspace/source
      command: ["/bin/bash", "-c"]
      args:
        - |-
          echo Applying manifests in $(inputs.params.manifest_dir) directory
          oc apply -f $(inputs.params.manifest_dir)
          echo -----------------------------------
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: update-deployment
spec:
  inputs:
    resources:
      - {type: image, name: image}
    params:
      - name: deployment
        description: The name of the deployment patch the image
        type: string

  steps:
    - name: patch
      image: quay.io/openshift/origin-cli:latest
      command: ["/bin/bash", "-c"]
      args:
        - |-
          oc patch deployment $(inputs.params.deployment) --patch='{"spec":{"template":{"spec":{
            "containers":[{
              "name": "$(inputs.params.deployment)",
              "image":"$(inputs.resources.image.url)"
            }]
          }}}}'